package com.gitee.pro.mapper;

import com.gitee.pro.entity.Auth;
import com.gitee.pro.entity.AuthExample;

import java.util.List;

import org.apache.ibatis.annotations.Param;

public interface AuthMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auth
     *
     * @mbg.generated Mon Dec 26 13:26:11 CST 2022
     */
    long countByExample(AuthExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auth
     *
     * @mbg.generated Mon Dec 26 13:26:11 CST 2022
     */
    int deleteByExample(AuthExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auth
     *
     * @mbg.generated Mon Dec 26 13:26:11 CST 2022
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auth
     *
     * @mbg.generated Mon Dec 26 13:26:11 CST 2022
     */
    int insert(Auth record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auth
     *
     * @mbg.generated Mon Dec 26 13:26:11 CST 2022
     */
    int insertSelective(Auth record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auth
     *
     * @mbg.generated Mon Dec 26 13:26:11 CST 2022
     */
    List<Auth> selectByExample(AuthExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auth
     *
     * @mbg.generated Mon Dec 26 13:26:11 CST 2022
     */
    Auth selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auth
     *
     * @mbg.generated Mon Dec 26 13:26:11 CST 2022
     */
    int updateByExampleSelective(@Param("record") Auth record, @Param("example") AuthExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auth
     *
     * @mbg.generated Mon Dec 26 13:26:11 CST 2022
     */
    int updateByExample(@Param("record") Auth record, @Param("example") AuthExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auth
     *
     * @mbg.generated Mon Dec 26 13:26:11 CST 2022
     */
    int updateByPrimaryKeySelective(Auth record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auth
     *
     * @mbg.generated Mon Dec 26 13:26:11 CST 2022
     */
    int updateByPrimaryKey(Auth record);

    /**
     * 自定义
     * 通过 角色 id 查询角色具备的权限 id
     *
     * @param roleId 角色 id
     * @return 具备的权限 id 的集合
     */
    List<Integer> selectAssignedAuthIdByRoleId(Integer roleId);

    /**
     * 自定义
     * 删除旧的关联关系
     *
     * @param roleId 要删除关联关系的角色 id
     */
    void deleteOldRelationship(Integer roleId);

    /**
     * 自定义
     * 添加新的关联关系
     *
     * @param roleId     角色 id
     * @param authIdList 要关联的权限 id 集合
     */
    void insertNewRelationship(@Param("roleId") Integer roleId, @Param("authIdList") List<Integer> authIdList);
}